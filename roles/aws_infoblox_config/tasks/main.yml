---

- name: Set Provider Infoblox Data
  set_fact:
    provider:
      host: "{{ hostvars[groups['infoblox'][0]].network_interfaces[1].association.public_ip }}"
      username: "{{ username }}"
      password: "{{ password }}"

- name: Debug Provider Infoblox Data (Public IP, Username, Password) 
  debug:
    var: provider

- name: Get Existing Networks
  ansible.builtin.set_fact:
    networks: "{{ lookup('infoblox.nios_modules.nios_lookup', 'network', provider=provider) }}"

- name: For the single network particular case (it returns a dict)
  set_fact:
    networks: "{{ [ networks ] }}"
  when: networks | type_debug != "list"

- name: Debug Existing Networks
  debug:
    msg: "Network: {{ item.network }}"
  loop: "{{ networks }}"

# - name: Create an IPv4 Container Network {{ ipv4_container }}
#   infoblox.nios_modules.nios_network:
#     provider: "{{ provider }}"
#     network: "{{ ipv4_container }}"
#     comment: "Container Network {{ ipv4_container }}"
#     container: true
#     state: present

- name: Get Next Available Network from Network Container {{ ipv4_container }}
  ansible.builtin.set_fact:
    ipv4_network: "{{ lookup('infoblox.nios_modules.nios_next_network', ipv4_container, ipv4_network_cidr, provider=provider) }}"

- name: Create an IPv4 Network {{ ipv4_network }}
  infoblox.nios_modules.nios_network:
    provider: "{{ provider }}"
    network: "{{ ipv4_network }}"
    comment: "Created Network {{ ipv4_network }}"
    state: present

- name: Debug Next Available IPv4 Network {{ ipv4_network }}
  debug:
    msg: "Next Available IPv4 Network is {{ ipv4_network }}"

- name: Get Next IPv4 Address from Network {{ ipv4_network }}
  ansible.builtin.set_fact:
    provider: "{{ provider }}"
    ipv4_address: "{{ lookup('infoblox.nios_modules.nios_next_ip', ipv4_network, num=1, exclude=[], provider=provider) }}"

- name: Debug Next IPv4 Address {{ ipv4_address }}
  debug:
    msg: "Next IPv4 address from Network {{ ipv4_network }} is {{ ipv4_address }}"

# - name: Delete an IPv4 Network {{ ipv4_network }}
#   infoblox.nios_modules.nios_network:
#     provider: "{{ provider }}"
#     network: "{{ ipv4_network }}"
#     comment: "Deleted Network {{ ipv4_network }}"
#     state: absent